function [y,Sigma]=Bindi_2014(M,Rjb,lambda,Vs30,T)
%function to create data for FIGURE 7 
%Abbrahamson et al 2008
%using the RM_INGV_GFZ model
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% clc; clear all;
%constants in the model
period = [0.01 0.02	0.04	0.07	0.1	0.15	0.2	0.26	0.3	0.36	0.4	0.46	0.5	0.6	0.7	0.9	1	1.3	1.5	1.8	2	2.6	3	10];
if length (T) == 1 && T == 1000; % Compute Sa and sigma with pre-defined period
    Sa=zeros(1,length(period)-1);
    sigma=zeros(1,length(period)-1);
    period1=period(1:end-1);
    for id=1:length(period)-1
        [y(id),Sigma(id)]=Bindi_sub_2014(M,Rjb,lambda,Vs30,id);
    end
    
else                            % Compute Sa and sigma with user-defined period
    y=zeros(1, length(T));
    Sigma=zeros(1, length(T));
    period1=T;
    for i=1:length(T)
        Ti = T(i);
        if ( isempty(find(abs(period-Ti) < 0.0001))) % The user defined period requires interpolation
            T_low = max(period(period < Ti));
            T_high = min(period(period > Ti));
            id_low  = find(period==T_low);
            id_high = find(period==T_high);
            
            [y_low,Sigma_low]=Bindi_sub_2014(M,Rjb,lambda,Vs30,id_low);
            [y_high,Sigma_high]=Bindi_sub_2014(M,Rjb,lambda,Vs30,id_high);
            x = [log(T_low) log(T_high)];
            Y_sa = [log(y_low) log(y_high)];
            Y_sigma = [Sigma_low Sigma_high];
            y(i) = exp(interp1(x, Y_sa, log(Ti)));
            Sigma(i) = interp1(x, Y_sigma, log(Ti));
        else
            id_T = find(abs((period- Ti)) < 0.0001);
            [y(i), Sigma(i)] = Bindi_sub_2014(M,Rjb,lambda,Vs30,id_T);
        end
    end
end
    
function [y,Sigma]=Bindi_sub_2014(M,Rjb,lambda,Vs30,id)
Rref=1;
Mref=5.5;
Mh=6.75;
vref=800; 

e1 = [3.32819 3.37053	3.43922	3.59651	3.68638	3.68632	3.68262	3.64314	3.63985	3.5748	3.53006	3.43387	3.40554	3.30442	3.23882	3.1537	3.13481	3.12474	2.89841	2.84727	2.68016	2.60171	2.39067	2.25399	];
c1=	[-1.2398 -1.26358	-1.31025	-1.29051	-1.28178	-1.17697	-1.10301	-1.08527	-1.10591	-1.09955	-1.09538	-1.06586	-1.05767	-1.05014	-1.05021	-1.04654	-1.04612	-1.0527	-0.97383	-0.98339	-0.98308	-0.97922	-0.97753	-0.94037	];
c2=	[0.21732 0.220527	0.244676	0.231878	0.219406	0.182662	0.133154	0.115603	0.108276	0.103083	0.101111	0.109066	0.112197	0.121734	0.114674	0.129522	0.114536	0.103471	0.104898	0.109072	0.164027	0.163344	0.211831	0.227241	];
h=	[5.26486 5.20082	4.91669	5.35922	6.12146	5.74154	5.31998	5.13455	5.12846	4.90557	4.95386	4.6599	4.43205	4.21657	4.17127	4.20016	4.48003	4.41613	4.25821	4.56697	4.68008	4.58186	5.39517	5.74173	];
c3=	[0.001186 0.001118	0.001092	0.001821	0.002114	0.00254	0.002421	0.001964	0.001499	0.001049	0.000851	0.000868	0.000789	0.000487	0.000159	0	0	0	0	0	0	0	0	0	];
b1=	[-0.0855 -0.08906	-0.11692	-0.08501	-0.11355	-0.09287	0.010086	0.02994	0.03919	0.052103	0.045846	0.060084	0.088319	0.120182	0.166933	0.193817	0.247547	0.306569	0.349119	0.384546	0.343663	0.331747	0.357514	0.385526	];
b2=	[-0.09256 -0.09162	-0.07838	-0.057	-0.07533	-0.10243	-0.10518	-0.12717	-0.13858	-0.15139	-0.16209	-0.1659	-0.16411	-0.16333	-0.16111	-0.15655	-0.15382	-0.14756	-0.14948	-0.13987	-0.13593	-0.14828	-0.12254	-0.11145	];
b3=	[0 0	0	0	0	0.073904	0.150461	0.178899	0.189682	0.216011	0.224827	0.197716	0.15475	0.117576	0.112005	0.051729	0.081575	0.092837	0.108209	0.098737	0	0	0	0	];
cy=	[-0.3019 -0.29402	-0.24177	-0.20763	-0.17324	-0.20249	-0.29123	-0.35443	-0.39306	-0.45391	-0.49206	-0.56446	-0.5962	-0.66782	-0.73839	-0.79408	-0.8217	-0.82658	-0.84505	-0.8232	-0.77866	-0.76924	-0.76961	-0.73207	];
sofN=	[-0.03977 -0.03924	-0.03772	-0.04594	-0.03805	-0.02673	-0.03265	-0.03384	-0.03725	-0.02791	-0.02563	-0.01866	-0.01742	-0.00049	0.011203	0.016526	0.016449	0.026307	0.025234	0.018674	0.011371	0.005535	0.008735	0.022989	];
sofR=	[0.077525 0.081052	0.079778	0.087497	0.08471	0.067844	0.075977	0.074982	0.076701	0.06979	0.072567	0.064599	0.060283	0.044921	0.028151	0.020352	0.021242	0.018604	0.022362	0.023089	0.016688	0.019857	0.023314	-0.02066	];
sofS=	[-0.03776 -0.04182	-0.04206	-0.04155	-0.04666	-0.04111	-0.04332	-0.04114	-0.03946	-0.04188	-0.04694	-0.04594	-0.04286	-0.04443	-0.03935	-0.03688	-0.03769	-0.04491	-0.0476	-0.04176	-0.02806	-0.02539	-0.03205	-0.00233	];
tau=	[0.149977 0.15867	0.154621	0.172785	0.169691	0.152902	0.150055	0.151209	0.157946	0.165436	0.157728	0.173005	0.18082	0.182233	0.189396	0.189074	0.191986	0.195026	0.181782	0.177752	0.163242	0.164958	0.17028	0.176546	];
phi=	[0.282398 0.282356	0.291143	0.291499	0.301967	0.305804	0.300109	0.302419	0.297402	0.294395	0.296992	0.291868	0.289957	0.292223	0.289307	0.288815	0.293264	0.297907	0.306676	0.316312	0.326484	0.329916	0.320626	0.314165	];
phis2s=	[0.165611 0.183959	0.187409	0.199913	0.208178	0.212124	0.190469	0.187037	0.174118	0.175848	0.169883	0.164162	0.16509	0.175634	0.168617	0.16817	0.183719	0.200775	0.209625	0.218569	0.221367	0.22535	0.210193	0.207247	];
sigma=	[0.319753 0.323885	0.329654	0.33886	0.346379	0.3419	0.335532	0.338114	0.336741	0.337694	0.336278	0.33929	0.341717	0.344388	0.345788	0.3452	0.350517	0.356067	0.356504	0.362835	0.36502	0.368857	0.363037	0.360373	];

%%%%%%%%%%%%%%%%%%%%%%%%

% peri = [0.01 0.02	0.04	0.07	0.1	0.15	0.2	0.26	0.3	0.36	0.4	0.46	0.5	0.6	0.7	0.9	1	1.3	1.5	1.8	2	2.6	3	10	];
% if T==0
%     id = length(peri);
% else
%    id = find(peri==T);
% end

%0.01s for PGA and 10s for PGV
%only for graphical reason
 %remove PGA and PGV
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% valo=zeros(nper,nmag);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% site effeft

vect_A=log10(Vs30/vref);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% style of faulting effect

frv = lambda >= 30 & lambda <= 150; % frv: 1 for lambda between 30 and 150, 0 otherwise
fnm = lambda >= -150 & lambda <= -30; % fnm: 1 for lambda between -150 and -30, 0 otherwise
if (fnm == 0 && frv==0) 
   fsof =  sofS(id);
else  
   fsof = fnm*sofN(id) + frv*sofR(id);
end

%%
valo = e1(id)+0.5*(c1(id)+c2(id).*(M-Mref)).*log10(Rjb^2+h(id)^2)...
      - c3(id).*((Rjb^2+h(id)^2).^0.5 - Rref)+ ...
      vect_A*cy(id) + fsof;
       
if(M<Mh)
valo=valo+b1(id)*(M-Mh)+b2(id)*((M-Mh)^2);
else
valo=valo+b3(id)*(M-Mh);   
end
y = 10^(valo)/980.6; % convert unit to cm/s^2
Sigma = sigma(id);
